{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,qBAC9BE,KAAMH,SAASC,cAAc,oBAC7BG,OAAQJ,SAASC,cAAc,uBASjC,SAASI,EAAcC,EAAUJ,GAc/B,OAZgB,IAAIK,SAAQ,CAACC,EAASC,KAEpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEF,E,MAAUJ,IAEpBO,EAAO,C,SAAEH,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAhBbJ,EAAKC,KAAKc,iBAAiB,UAyB3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOnB,EAAKI,MAAMgB,OAC1Bf,EAAOc,OAAOnB,EAAKK,KAAKe,OACxBd,EAASa,OAAOnB,EAAKM,OAAOc,OAChC,IAAK,IAAIC,EAAI,EAAGA,GAAKf,EAAQe,GAAK,EAChCd,EAAcc,EAAGH,GACdI,MAAK,EAACd,SAAEA,EAAQJ,MAAEA,MACjBmB,QAAQC,IAAIhB,GACZiB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBnB,QAAiBJ,MAAU,IAGnDwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MAClBqB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoBrB,QAAeJ,MAAU,IAGnDc,GAASb,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Step 1: import library for alarm sign\nimport Notiflix from 'notiflix';\n\n// step 2: find our el\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n};\n\n// step 3: create listener \nrefs.form.addEventListener('submit', onSubmitForm);\n\n\n// step 4: change function\n\nfunction createPromise(position, delay) {\n  // step 4.1 create promise\n  const promise = new Promise((resolve, reject) => {\n    // step 4.2 create timeOut\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  // Warning do not forget return our prom\n  return promise;\n};\n\n// step 5: create function for our form\n\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let amount = Number(refs.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(position);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","i","then","console","log","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.31d72521.js.map"}